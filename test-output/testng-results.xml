<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="3" total="31" passed="24" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-04T19:03:13 IST" name="All Test Suite" finished-at="2024-03-04T19:03:56 IST" duration-ms="42580">
    <groups>
    </groups>
    <test started-at="2024-03-04T19:03:13 IST" name="C:/Users/Sampat/IdeaProjects/Maven_Demo_28Nov_Varsha" finished-at="2024-03-04T19:03:56 IST" duration-ms="42580">
      <class name="testNG.Annotation.BeforeClassAfterClassAnnotation">
        <test-method is-config="true" signature="beforeClassExample()[pri:0, instance:testNG.Annotation.BeforeClassAfterClassAnnotation@2e222612]" started-at="2024-03-04T19:03:33 IST" name="beforeClassExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassExample -->
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG.Annotation.BeforeClassAfterClassAnnotation@2e222612]" started-at="2024-03-04T19:03:33 IST" name="beforeMethodExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method signature="testCase1()[pri:0, instance:testNG.Annotation.BeforeClassAfterClassAnnotation@2e222612]" started-at="2024-03-04T19:03:33 IST" name="testCase1" finished-at="2024-03-04T19:03:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG.Annotation.BeforeClassAfterClassAnnotation@2e222612]" started-at="2024-03-04T19:03:33 IST" name="afterMethodExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG.Annotation.BeforeClassAfterClassAnnotation@2e222612]" started-at="2024-03-04T19:03:33 IST" name="beforeMethodExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method signature="testCase2()[pri:0, instance:testNG.Annotation.BeforeClassAfterClassAnnotation@2e222612]" started-at="2024-03-04T19:03:33 IST" name="testCase2" finished-at="2024-03-04T19:03:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG.Annotation.BeforeClassAfterClassAnnotation@2e222612]" started-at="2024-03-04T19:03:33 IST" name="afterMethodExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
        <test-method is-config="true" signature="afterClassExample()[pri:0, instance:testNG.Annotation.BeforeClassAfterClassAnnotation@2e222612]" started-at="2024-03-04T19:03:33 IST" name="afterClassExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassExample -->
      </class> <!-- testNG.Annotation.BeforeClassAfterClassAnnotation -->
      <class name="testNG.Priority.WithoutPriorityExample">
        <test-method signature="testScriptA()[pri:0, instance:testNG.Priority.WithoutPriorityExample@65f095f8]" started-at="2024-03-04T19:03:56 IST" name="testScriptA" finished-at="2024-03-04T19:03:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptA -->
        <test-method signature="testScriptB()[pri:0, instance:testNG.Priority.WithoutPriorityExample@65f095f8]" started-at="2024-03-04T19:03:56 IST" name="testScriptB" finished-at="2024-03-04T19:03:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptB -->
        <test-method signature="testScriptC()[pri:0, instance:testNG.Priority.WithoutPriorityExample@65f095f8]" started-at="2024-03-04T19:03:56 IST" name="testScriptC" finished-at="2024-03-04T19:03:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptC -->
        <test-method signature="testScriptD()[pri:0, instance:testNG.Priority.WithoutPriorityExample@65f095f8]" started-at="2024-03-04T19:03:56 IST" name="testScriptD" finished-at="2024-03-04T19:03:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptD -->
        <test-method signature="testScriptE()[pri:0, instance:testNG.Priority.WithoutPriorityExample@65f095f8]" started-at="2024-03-04T19:03:56 IST" name="testScriptE" finished-at="2024-03-04T19:03:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptE -->
        <test-method signature="testScriptF()[pri:0, instance:testNG.Priority.WithoutPriorityExample@65f095f8]" started-at="2024-03-04T19:03:56 IST" name="testScriptF" finished-at="2024-03-04T19:03:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptF -->
      </class> <!-- testNG.Priority.WithoutPriorityExample -->
      <class name="testNG.Annotation.InvocationCountExample">
        <test-method signature="iCountExample()[pri:0, instance:testNG.Annotation.InvocationCountExample@10959ece]" started-at="2024-03-04T19:03:45 IST" name="iCountExample" finished-at="2024-03-04T19:03:45 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iCountExample -->
      </class> <!-- testNG.Annotation.InvocationCountExample -->
      <class name="testNG.BasicTestNGExample">
        <test-method signature="testCase1()[pri:0, instance:testNG.BasicTestNGExample@3a6bb9bf]" started-at="2024-03-04T19:03:45 IST" name="testCase1" finished-at="2024-03-04T19:03:51 IST" duration-ms="5405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method signature="testCase2()[pri:0, instance:testNG.BasicTestNGExample@3a6bb9bf]" started-at="2024-03-04T19:03:51 IST" name="testCase2" finished-at="2024-03-04T19:03:56 IST" duration-ms="5037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
      </class> <!-- testNG.BasicTestNGExample -->
      <class name="testNG.Priority.PriorityExample">
        <test-method signature="testScriptB()[pri:-5, instance:testNG.Priority.PriorityExample@34f7cfd9]" started-at="2024-03-04T19:03:56 IST" name="testScriptB" finished-at="2024-03-04T19:03:56 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptB -->
        <test-method signature="testScriptC()[pri:0, instance:testNG.Priority.PriorityExample@34f7cfd9]" started-at="2024-03-04T19:03:56 IST" name="testScriptC" finished-at="2024-03-04T19:03:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptC -->
        <test-method signature="testScriptD()[pri:0, instance:testNG.Priority.PriorityExample@34f7cfd9]" started-at="2024-03-04T19:03:56 IST" name="testScriptD" finished-at="2024-03-04T19:03:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptD -->
        <test-method signature="testScriptA()[pri:1, instance:testNG.Priority.PriorityExample@34f7cfd9]" started-at="2024-03-04T19:03:56 IST" name="testScriptA" finished-at="2024-03-04T19:03:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptA -->
        <test-method signature="testScriptF()[pri:2, instance:testNG.Priority.PriorityExample@34f7cfd9]" started-at="2024-03-04T19:03:56 IST" name="testScriptF" finished-at="2024-03-04T19:03:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptF -->
        <test-method signature="testScriptE()[pri:97, instance:testNG.Priority.PriorityExample@34f7cfd9]" started-at="2024-03-04T19:03:56 IST" name="testScriptE" finished-at="2024-03-04T19:03:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScriptE -->
      </class> <!-- testNG.Priority.PriorityExample -->
      <class name="testNG.Annotation.BeforeMethodAfterMethodExample">
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodExample@73ee04c8]" started-at="2024-03-04T19:03:33 IST" name="beforeMethodExample" finished-at="2024-03-04T19:03:36 IST" duration-ms="2498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method signature="testCase1()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodExample@73ee04c8]" started-at="2024-03-04T19:03:36 IST" name="testCase1" finished-at="2024-03-04T19:03:38 IST" duration-ms="2159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodExample@73ee04c8]" started-at="2024-03-04T19:03:38 IST" name="afterMethodExample" finished-at="2024-03-04T19:03:39 IST" duration-ms="1009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodExample@73ee04c8]" started-at="2024-03-04T19:03:39 IST" name="beforeMethodExample" finished-at="2024-03-04T19:03:41 IST" duration-ms="2260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method signature="testCase2()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodExample@73ee04c8]" started-at="2024-03-04T19:03:41 IST" name="testCase2" finished-at="2024-03-04T19:03:44 IST" duration-ms="2824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodExample@73ee04c8]" started-at="2024-03-04T19:03:44 IST" name="afterMethodExample" finished-at="2024-03-04T19:03:45 IST" duration-ms="1134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
      </class> <!-- testNG.Annotation.BeforeMethodAfterMethodExample -->
      <class name="testNG.Annotation.DependsOnGroupExample">
        <test-method signature="verifyFundsTransfer()[pri:0, instance:testNG.Annotation.DependsOnGroupExample@7671cb68]" started-at="2024-03-04T19:03:45 IST" name="verifyFundsTransfer" finished-at="2024-03-04T19:03:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFundsTransfer -->
      </class> <!-- testNG.Annotation.DependsOnGroupExample -->
      <class name="testNG.Annotation.BeforeMethodAfterMethodDemo">
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodDemo@61386958]" started-at="2024-03-04T19:03:33 IST" name="beforeMethodExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method signature="testCase1()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodDemo@61386958]" started-at="2024-03-04T19:03:33 IST" name="testCase1" finished-at="2024-03-04T19:03:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodDemo@61386958]" started-at="2024-03-04T19:03:33 IST" name="afterMethodExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
        <test-method is-config="true" signature="beforeMethodExample()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodDemo@61386958]" started-at="2024-03-04T19:03:33 IST" name="beforeMethodExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodExample -->
        <test-method signature="testCase2()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodDemo@61386958]" started-at="2024-03-04T19:03:33 IST" name="testCase2" finished-at="2024-03-04T19:03:33 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="afterMethodExample()[pri:0, instance:testNG.Annotation.BeforeMethodAfterMethodDemo@61386958]" started-at="2024-03-04T19:03:33 IST" name="afterMethodExample" finished-at="2024-03-04T19:03:33 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodExample -->
      </class> <!-- testNG.Annotation.BeforeMethodAfterMethodDemo -->
      <class name="testNG.Annotation.DependsOnMethodExample">
        <test-method signature="verifyFundsTransfer()[pri:0, instance:testNG.Annotation.DependsOnMethodExample@68c72235]" started-at="2024-03-04T19:03:45 IST" name="verifyFundsTransfer" finished-at="2024-03-04T19:03:45 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFundsTransfer -->
        <test-method retried="true" signature="verifyLogin()[pri:0, instance:testNG.Annotation.DependsOnMethodExample@68c72235]" started-at="2024-03-04T19:03:45 IST" name="verifyLogin" finished-at="2024-03-04T19:03:45 IST" duration-ms="26" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testNG.Annotation.DependsOnMethodExample.verifyLogin(DependsOnMethodExample.java:10)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method retried="true" signature="verifyLogin()[pri:0, instance:testNG.Annotation.DependsOnMethodExample@68c72235]" started-at="2024-03-04T19:03:45 IST" name="verifyLogin" finished-at="2024-03-04T19:03:45 IST" duration-ms="1" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testNG.Annotation.DependsOnMethodExample.verifyLogin(DependsOnMethodExample.java:10)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:249)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method retried="true" signature="verifyLogin()[pri:0, instance:testNG.Annotation.DependsOnMethodExample@68c72235]" started-at="2024-03-04T19:03:45 IST" name="verifyLogin" finished-at="2024-03-04T19:03:45 IST" duration-ms="1" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testNG.Annotation.DependsOnMethodExample.verifyLogin(DependsOnMethodExample.java:10)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:249)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method signature="verifyLogin()[pri:0, instance:testNG.Annotation.DependsOnMethodExample@68c72235]" started-at="2024-03-04T19:03:45 IST" name="verifyLogin" finished-at="2024-03-04T19:03:45 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testNG.Annotation.DependsOnMethodExample.verifyLogin(DependsOnMethodExample.java:10)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:249)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
      </class> <!-- testNG.Annotation.DependsOnMethodExample -->
      <class name="testNG.Parameterization.WithParametrizationExample">
        <test-method is-config="true" signature="beforeMethodTestDemo(java.lang.String)[pri:0, instance:testNG.Parameterization.WithParametrizationExample@1018bde2]" started-at="2024-03-04T19:03:13 IST" name="beforeMethodTestDemo" finished-at="2024-03-04T19:03:20 IST" duration-ms="6473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodTestDemo -->
        <test-method signature="verifyGoogleSearch(java.lang.String,java.lang.String)[pri:0, instance:testNG.Parameterization.WithParametrizationExample@1018bde2]" started-at="2024-03-04T19:03:20 IST" name="verifyGoogleSearch" finished-at="2024-03-04T19:03:33 IST" duration-ms="13461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Selenium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pune]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGoogleSearch -->
      </class> <!-- testNG.Parameterization.WithParametrizationExample -->
    </test> <!-- C:/Users/Sampat/IdeaProjects/Maven_Demo_28Nov_Varsha -->
  </suite> <!-- All Test Suite -->
</testng-results>
